// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_INCLUDED_test_2eproto
#define PROTOBUF_INCLUDED_test_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_test_2eproto();
namespace Protocol {
class User;
class UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
class UserGroup;
class UserGroupDefaultTypeInternal;
extern UserGroupDefaultTypeInternal _UserGroup_default_instance_;
}  // namespace Protocol
namespace google {
namespace protobuf {
template<> ::Protocol::User* Arena::CreateMaybeMessage<::Protocol::User>(Arena*);
template<> ::Protocol::UserGroup* Arena::CreateMaybeMessage<::Protocol::UserGroup>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Protocol {

// ===================================================================

class User :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.User) */ {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  User(User&& from) noexcept
    : User() {
    *this = ::std::move(from);
  }

  inline User& operator=(User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const User* internal_default_instance() {
    return reinterpret_cast<const User*>(
               &_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(User* other);
  friend void swap(User& a, User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline User* New() const final {
    return CreateMaybeMessage<User>(nullptr);
  }

  User* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<User>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 age = 2;
  int age_size() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age(int index) const;
  void set_age(int index, ::google::protobuf::int32 value);
  void add_age(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      age() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_age();

  // repeated double age2 = 3;
  int age2_size() const;
  void clear_age2();
  static const int kAge2FieldNumber = 3;
  double age2(int index) const;
  void set_age2(int index, double value);
  void add_age2(double value);
  const ::google::protobuf::RepeatedField< double >&
      age2() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_age2();

  // repeated float age3 = 4;
  int age3_size() const;
  void clear_age3();
  static const int kAge3FieldNumber = 4;
  float age3(int index) const;
  void set_age3(int index, float value);
  void add_age3(float value);
  const ::google::protobuf::RepeatedField< float >&
      age3() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_age3();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Protocol.User)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > age_;
  mutable std::atomic<int> _age_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > age2_;
  mutable std::atomic<int> _age2_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > age3_;
  mutable std::atomic<int> _age3_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class UserGroup :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Protocol.UserGroup) */ {
 public:
  UserGroup();
  virtual ~UserGroup();

  UserGroup(const UserGroup& from);

  inline UserGroup& operator=(const UserGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGroup(UserGroup&& from) noexcept
    : UserGroup() {
    *this = ::std::move(from);
  }

  inline UserGroup& operator=(UserGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UserGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGroup* internal_default_instance() {
    return reinterpret_cast<const UserGroup*>(
               &_UserGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UserGroup* other);
  friend void swap(UserGroup& a, UserGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGroup* New() const final {
    return CreateMaybeMessage<UserGroup>(nullptr);
  }

  UserGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGroup& from);
  void MergeFrom(const UserGroup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Protocol.User userList = 1;
  int userlist_size() const;
  void clear_userlist();
  static const int kUserListFieldNumber = 1;
  ::Protocol::User* mutable_userlist(int index);
  ::google::protobuf::RepeatedPtrField< ::Protocol::User >*
      mutable_userlist();
  const ::Protocol::User& userlist(int index) const;
  ::Protocol::User* add_userlist();
  const ::google::protobuf::RepeatedPtrField< ::Protocol::User >&
      userlist() const;

  // @@protoc_insertion_point(class_scope:Protocol.UserGroup)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Protocol::User > userlist_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// User

// string name = 1;
inline void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:Protocol.User.name)
  return name_.GetNoArena();
}
inline void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Protocol.User.name)
}
#if LANG_CXX11
inline void User::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Protocol.User.name)
}
#endif
inline void User::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Protocol.User.name)
}
inline void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Protocol.User.name)
}
inline ::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Protocol.User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:Protocol.User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void User::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Protocol.User.name)
}

// repeated int32 age = 2;
inline int User::age_size() const {
  return age_.size();
}
inline void User::clear_age() {
  age_.Clear();
}
inline ::google::protobuf::int32 User::age(int index) const {
  // @@protoc_insertion_point(field_get:Protocol.User.age)
  return age_.Get(index);
}
inline void User::set_age(int index, ::google::protobuf::int32 value) {
  age_.Set(index, value);
  // @@protoc_insertion_point(field_set:Protocol.User.age)
}
inline void User::add_age(::google::protobuf::int32 value) {
  age_.Add(value);
  // @@protoc_insertion_point(field_add:Protocol.User.age)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
User::age() const {
  // @@protoc_insertion_point(field_list:Protocol.User.age)
  return age_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
User::mutable_age() {
  // @@protoc_insertion_point(field_mutable_list:Protocol.User.age)
  return &age_;
}

// repeated double age2 = 3;
inline int User::age2_size() const {
  return age2_.size();
}
inline void User::clear_age2() {
  age2_.Clear();
}
inline double User::age2(int index) const {
  // @@protoc_insertion_point(field_get:Protocol.User.age2)
  return age2_.Get(index);
}
inline void User::set_age2(int index, double value) {
  age2_.Set(index, value);
  // @@protoc_insertion_point(field_set:Protocol.User.age2)
}
inline void User::add_age2(double value) {
  age2_.Add(value);
  // @@protoc_insertion_point(field_add:Protocol.User.age2)
}
inline const ::google::protobuf::RepeatedField< double >&
User::age2() const {
  // @@protoc_insertion_point(field_list:Protocol.User.age2)
  return age2_;
}
inline ::google::protobuf::RepeatedField< double >*
User::mutable_age2() {
  // @@protoc_insertion_point(field_mutable_list:Protocol.User.age2)
  return &age2_;
}

// repeated float age3 = 4;
inline int User::age3_size() const {
  return age3_.size();
}
inline void User::clear_age3() {
  age3_.Clear();
}
inline float User::age3(int index) const {
  // @@protoc_insertion_point(field_get:Protocol.User.age3)
  return age3_.Get(index);
}
inline void User::set_age3(int index, float value) {
  age3_.Set(index, value);
  // @@protoc_insertion_point(field_set:Protocol.User.age3)
}
inline void User::add_age3(float value) {
  age3_.Add(value);
  // @@protoc_insertion_point(field_add:Protocol.User.age3)
}
inline const ::google::protobuf::RepeatedField< float >&
User::age3() const {
  // @@protoc_insertion_point(field_list:Protocol.User.age3)
  return age3_;
}
inline ::google::protobuf::RepeatedField< float >*
User::mutable_age3() {
  // @@protoc_insertion_point(field_mutable_list:Protocol.User.age3)
  return &age3_;
}

// -------------------------------------------------------------------

// UserGroup

// repeated .Protocol.User userList = 1;
inline int UserGroup::userlist_size() const {
  return userlist_.size();
}
inline void UserGroup::clear_userlist() {
  userlist_.Clear();
}
inline ::Protocol::User* UserGroup::mutable_userlist(int index) {
  // @@protoc_insertion_point(field_mutable:Protocol.UserGroup.userList)
  return userlist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Protocol::User >*
UserGroup::mutable_userlist() {
  // @@protoc_insertion_point(field_mutable_list:Protocol.UserGroup.userList)
  return &userlist_;
}
inline const ::Protocol::User& UserGroup::userlist(int index) const {
  // @@protoc_insertion_point(field_get:Protocol.UserGroup.userList)
  return userlist_.Get(index);
}
inline ::Protocol::User* UserGroup::add_userlist() {
  // @@protoc_insertion_point(field_add:Protocol.UserGroup.userList)
  return userlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Protocol::User >&
UserGroup::userlist() const {
  // @@protoc_insertion_point(field_list:Protocol.UserGroup.userList)
  return userlist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_test_2eproto
